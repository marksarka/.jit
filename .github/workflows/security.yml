name: Workflows generated by the MVS plan
on:
  workflow_dispatch:
    inputs:
       client_payload:
          description: The Client payload
          required: true
jobs:
  docker-scan:
    if: contains( fromJSON(github.event.inputs.client_payload).payload.control_ids, '4f090709-fac0-4e99-ad69-ef283e811c03') || fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'docker-scan'
    runs-on: ubuntu-latest
    steps:
    - name: trivy-dockerfile-scanner
      uses: jitsecurity-controls/jit-github-action@v1.6
      with:
        docker_user: jit-bot
        docker_password: ${{fromJSON(github.event.inputs.client_payload).payload.container_registry_token}}
        security_control: ghcr.io/jitsecurity-controls/control-trivy-alpine:latest
        security_control_args: --quiet conf --severity HIGH,CRITICAL -f json /code
        
        dispatch_type: workflow

  iac-misconfig-detection:
    if: contains( fromJSON(github.event.inputs.client_payload).payload.control_ids, 'd75b6a09-a4cd-4944-903e-7cf78ae7065b') || fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'iac-misconfig-detection'
    runs-on: ubuntu-latest
    steps:
    - name: cloud-infrastructure-misconfiguration
      uses: jitsecurity-controls/jit-github-action@v1.6
      with:
        docker_user: jit-bot
        docker_password: ${{fromJSON(github.event.inputs.client_payload).payload.container_registry_token}}
        security_control: ghcr.io/jitsecurity-controls/control-kics-alpine:latest
        security_control_args: scan -p /code -o /code/jit-report -f json --exclude-severities INFO,MEDIUM,LOW --disable-secrets
        security_control_output_file: /code/jit-report/results.json
        dispatch_type: workflow

  remediation-pr:
    if: fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'remediation-pr'
    runs-on: ubuntu-latest
    steps:
    - name: remediation-pr
      uses: jitsecurity-controls/jit-github-action@v1.6
      with:
        docker_user: jit-bot
        docker_password: ${{fromJSON(github.event.inputs.client_payload).payload.container_registry_token}}
        security_control: ghcr.io/jitsecurity-controls/open-remediation-pr-alpine:latest
        security_control_args: --github-token ${{fromJSON(github.event.inputs.client_payload).payload.github_token}} --fix-pr-config ${{fromJSON(github.event.inputs.client_payload).payload.fix_pr_config}}
        security_control_output_file: /tmp/report.json
        dispatch_type: workflow
